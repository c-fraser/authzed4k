//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: protoc-gen-openapiv2/options/openapiv2.proto

package grpc.gateway.protoc_gen_openapiv2.options;

@kotlin.jvm.JvmSynthetic
public inline fun schema(block: grpc.gateway.protoc_gen_openapiv2.options.SchemaKt.Dsl.() -> kotlin.Unit): grpc.gateway.protoc_gen_openapiv2.options.Openapiv2.Schema =
  grpc.gateway.protoc_gen_openapiv2.options.SchemaKt.Dsl._create(grpc.gateway.protoc_gen_openapiv2.options.Openapiv2.Schema.newBuilder()).apply { block() }._build()
public object SchemaKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: grpc.gateway.protoc_gen_openapiv2.options.Openapiv2.Schema.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: grpc.gateway.protoc_gen_openapiv2.options.Openapiv2.Schema.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): grpc.gateway.protoc_gen_openapiv2.options.Openapiv2.Schema = _builder.build()

    /**
     * <code>.grpc.gateway.protoc_gen_openapiv2.options.JSONSchema json_schema = 1;</code>
     */
    public var jsonSchema: grpc.gateway.protoc_gen_openapiv2.options.Openapiv2.JSONSchema
      @JvmName("getJsonSchema")
      get() = _builder.getJsonSchema()
      @JvmName("setJsonSchema")
      set(value) {
        _builder.setJsonSchema(value)
      }
    /**
     * <code>.grpc.gateway.protoc_gen_openapiv2.options.JSONSchema json_schema = 1;</code>
     */
    public fun clearJsonSchema() {
      _builder.clearJsonSchema()
    }
    /**
     * <code>.grpc.gateway.protoc_gen_openapiv2.options.JSONSchema json_schema = 1;</code>
     * @return Whether the jsonSchema field is set.
     */
    public fun hasJsonSchema(): kotlin.Boolean {
      return _builder.hasJsonSchema()
    }

    /**
     * <pre>
     * Adds support for polymorphism. The discriminator is the schema property
     * name that is used to differentiate between other schema that inherit this
     * schema. The property name used MUST be defined at this schema and it MUST
     * be in the required property list. When used, the value MUST be the name of
     * this schema or any schema that inherits it.
     * </pre>
     *
     * <code>string discriminator = 2;</code>
     */
    public var discriminator: kotlin.String
      @JvmName("getDiscriminator")
      get() = _builder.getDiscriminator()
      @JvmName("setDiscriminator")
      set(value) {
        _builder.setDiscriminator(value)
      }
    /**
     * <pre>
     * Adds support for polymorphism. The discriminator is the schema property
     * name that is used to differentiate between other schema that inherit this
     * schema. The property name used MUST be defined at this schema and it MUST
     * be in the required property list. When used, the value MUST be the name of
     * this schema or any schema that inherits it.
     * </pre>
     *
     * <code>string discriminator = 2;</code>
     */
    public fun clearDiscriminator() {
      _builder.clearDiscriminator()
    }

    /**
     * <pre>
     * Relevant only for Schema "properties" definitions. Declares the property as
     * "read only". This means that it MAY be sent as part of a response but MUST
     * NOT be sent as part of the request. Properties marked as readOnly being
     * true SHOULD NOT be in the required list of the defined schema. Default
     * value is false.
     * </pre>
     *
     * <code>bool read_only = 3;</code>
     */
    public var readOnly: kotlin.Boolean
      @JvmName("getReadOnly")
      get() = _builder.getReadOnly()
      @JvmName("setReadOnly")
      set(value) {
        _builder.setReadOnly(value)
      }
    /**
     * <pre>
     * Relevant only for Schema "properties" definitions. Declares the property as
     * "read only". This means that it MAY be sent as part of a response but MUST
     * NOT be sent as part of the request. Properties marked as readOnly being
     * true SHOULD NOT be in the required list of the defined schema. Default
     * value is false.
     * </pre>
     *
     * <code>bool read_only = 3;</code>
     */
    public fun clearReadOnly() {
      _builder.clearReadOnly()
    }

    /**
     * <pre>
     * Additional external documentation for this schema.
     * </pre>
     *
     * <code>.grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 5;</code>
     */
    public var externalDocs: grpc.gateway.protoc_gen_openapiv2.options.Openapiv2.ExternalDocumentation
      @JvmName("getExternalDocs")
      get() = _builder.getExternalDocs()
      @JvmName("setExternalDocs")
      set(value) {
        _builder.setExternalDocs(value)
      }
    /**
     * <pre>
     * Additional external documentation for this schema.
     * </pre>
     *
     * <code>.grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 5;</code>
     */
    public fun clearExternalDocs() {
      _builder.clearExternalDocs()
    }
    /**
     * <pre>
     * Additional external documentation for this schema.
     * </pre>
     *
     * <code>.grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 5;</code>
     * @return Whether the externalDocs field is set.
     */
    public fun hasExternalDocs(): kotlin.Boolean {
      return _builder.hasExternalDocs()
    }

    /**
     * <pre>
     * A free-form property to include an example of an instance for this schema in JSON.
     * This is copied verbatim to the output.
     * </pre>
     *
     * <code>string example = 6;</code>
     */
    public var example: kotlin.String
      @JvmName("getExample")
      get() = _builder.getExample()
      @JvmName("setExample")
      set(value) {
        _builder.setExample(value)
      }
    /**
     * <pre>
     * A free-form property to include an example of an instance for this schema in JSON.
     * This is copied verbatim to the output.
     * </pre>
     *
     * <code>string example = 6;</code>
     */
    public fun clearExample() {
      _builder.clearExample()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun grpc.gateway.protoc_gen_openapiv2.options.Openapiv2.Schema.copy(block: grpc.gateway.protoc_gen_openapiv2.options.SchemaKt.Dsl.() -> kotlin.Unit): grpc.gateway.protoc_gen_openapiv2.options.Openapiv2.Schema =
  grpc.gateway.protoc_gen_openapiv2.options.SchemaKt.Dsl._create(this.toBuilder()).apply { block() }._build()
