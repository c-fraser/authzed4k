//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: protoc-gen-openapiv2/options/openapiv2.proto

package grpc.gateway.protoc_gen_openapiv2.options;

@kotlin.jvm.JvmSynthetic
public inline fun scopes(block: grpc.gateway.protoc_gen_openapiv2.options.ScopesKt.Dsl.() -> kotlin.Unit): grpc.gateway.protoc_gen_openapiv2.options.Openapiv2.Scopes =
  grpc.gateway.protoc_gen_openapiv2.options.ScopesKt.Dsl._create(grpc.gateway.protoc_gen_openapiv2.options.Openapiv2.Scopes.newBuilder()).apply { block() }._build()
public object ScopesKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: grpc.gateway.protoc_gen_openapiv2.options.Openapiv2.Scopes.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: grpc.gateway.protoc_gen_openapiv2.options.Openapiv2.Scopes.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): grpc.gateway.protoc_gen_openapiv2.options.Openapiv2.Scopes = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ScopeProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Maps between a name of a scope to a short description of it (as the value
     * of the property).
     * </pre>
     *
     * <code>map&lt;string, string&gt; scope = 1;</code>
     */
     public val scope: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ScopeProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getScopeMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getScopeMap()
      )
    /**
     * <pre>
     * Maps between a name of a scope to a short description of it (as the value
     * of the property).
     * </pre>
     *
     * <code>map&lt;string, string&gt; scope = 1;</code>
     */
    @JvmName("putScope")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ScopeProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putScope(key, value)
       }
    /**
     * <pre>
     * Maps between a name of a scope to a short description of it (as the value
     * of the property).
     * </pre>
     *
     * <code>map&lt;string, string&gt; scope = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setScope")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ScopeProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * <pre>
     * Maps between a name of a scope to a short description of it (as the value
     * of the property).
     * </pre>
     *
     * <code>map&lt;string, string&gt; scope = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeScope")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ScopeProxy>
      .remove(key: kotlin.String) {
         _builder.removeScope(key)
       }
    /**
     * <pre>
     * Maps between a name of a scope to a short description of it (as the value
     * of the property).
     * </pre>
     *
     * <code>map&lt;string, string&gt; scope = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllScope")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ScopeProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllScope(map)
       }
    /**
     * <pre>
     * Maps between a name of a scope to a short description of it (as the value
     * of the property).
     * </pre>
     *
     * <code>map&lt;string, string&gt; scope = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearScope")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ScopeProxy>
      .clear() {
         _builder.clearScope()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun grpc.gateway.protoc_gen_openapiv2.options.Openapiv2.Scopes.copy(block: grpc.gateway.protoc_gen_openapiv2.options.ScopesKt.Dsl.() -> kotlin.Unit): grpc.gateway.protoc_gen_openapiv2.options.Openapiv2.Scopes =
  grpc.gateway.protoc_gen_openapiv2.options.ScopesKt.Dsl._create(this.toBuilder()).apply { block() }._build()
