//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: validate/validate.proto

package io.envoyproxy.pgv.validate;

@kotlin.jvm.JvmSynthetic
public inline fun repeatedRules(block: io.envoyproxy.pgv.validate.RepeatedRulesKt.Dsl.() -> kotlin.Unit): io.envoyproxy.pgv.validate.Validate.RepeatedRules =
  io.envoyproxy.pgv.validate.RepeatedRulesKt.Dsl._create(io.envoyproxy.pgv.validate.Validate.RepeatedRules.newBuilder()).apply { block() }._build()
public object RepeatedRulesKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.envoyproxy.pgv.validate.Validate.RepeatedRules.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.envoyproxy.pgv.validate.Validate.RepeatedRules.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.envoyproxy.pgv.validate.Validate.RepeatedRules = _builder.build()

    /**
     * <pre>
     * MinItems specifies that this field must have the specified number of
     * items at a minimum
     * </pre>
     *
     * <code>optional uint64 min_items = 1;</code>
     */
    public var minItems: kotlin.Long
      @JvmName("getMinItems")
      get() = _builder.getMinItems()
      @JvmName("setMinItems")
      set(value) {
        _builder.setMinItems(value)
      }
    /**
     * <pre>
     * MinItems specifies that this field must have the specified number of
     * items at a minimum
     * </pre>
     *
     * <code>optional uint64 min_items = 1;</code>
     */
    public fun clearMinItems() {
      _builder.clearMinItems()
    }
    /**
     * <pre>
     * MinItems specifies that this field must have the specified number of
     * items at a minimum
     * </pre>
     *
     * <code>optional uint64 min_items = 1;</code>
     * @return Whether the minItems field is set.
     */
    public fun hasMinItems(): kotlin.Boolean {
      return _builder.hasMinItems()
    }

    /**
     * <pre>
     * MaxItems specifies that this field must have the specified number of
     * items at a maximum
     * </pre>
     *
     * <code>optional uint64 max_items = 2;</code>
     */
    public var maxItems: kotlin.Long
      @JvmName("getMaxItems")
      get() = _builder.getMaxItems()
      @JvmName("setMaxItems")
      set(value) {
        _builder.setMaxItems(value)
      }
    /**
     * <pre>
     * MaxItems specifies that this field must have the specified number of
     * items at a maximum
     * </pre>
     *
     * <code>optional uint64 max_items = 2;</code>
     */
    public fun clearMaxItems() {
      _builder.clearMaxItems()
    }
    /**
     * <pre>
     * MaxItems specifies that this field must have the specified number of
     * items at a maximum
     * </pre>
     *
     * <code>optional uint64 max_items = 2;</code>
     * @return Whether the maxItems field is set.
     */
    public fun hasMaxItems(): kotlin.Boolean {
      return _builder.hasMaxItems()
    }

    /**
     * <pre>
     * Unique specifies that all elements in this field must be unique. This
     * contraint is only applicable to scalar and enum types (messages are not
     * supported).
     * </pre>
     *
     * <code>optional bool unique = 3;</code>
     */
    public var unique: kotlin.Boolean
      @JvmName("getUnique")
      get() = _builder.getUnique()
      @JvmName("setUnique")
      set(value) {
        _builder.setUnique(value)
      }
    /**
     * <pre>
     * Unique specifies that all elements in this field must be unique. This
     * contraint is only applicable to scalar and enum types (messages are not
     * supported).
     * </pre>
     *
     * <code>optional bool unique = 3;</code>
     */
    public fun clearUnique() {
      _builder.clearUnique()
    }
    /**
     * <pre>
     * Unique specifies that all elements in this field must be unique. This
     * contraint is only applicable to scalar and enum types (messages are not
     * supported).
     * </pre>
     *
     * <code>optional bool unique = 3;</code>
     * @return Whether the unique field is set.
     */
    public fun hasUnique(): kotlin.Boolean {
      return _builder.hasUnique()
    }

    /**
     * <pre>
     * Items specifies the contraints to be applied to each item in the field.
     * Repeated message fields will still execute validation against each item
     * unless skip is specified here.
     * </pre>
     *
     * <code>optional .validate.FieldRules items = 4;</code>
     */
    public var items: io.envoyproxy.pgv.validate.Validate.FieldRules
      @JvmName("getItems")
      get() = _builder.getItems()
      @JvmName("setItems")
      set(value) {
        _builder.setItems(value)
      }
    /**
     * <pre>
     * Items specifies the contraints to be applied to each item in the field.
     * Repeated message fields will still execute validation against each item
     * unless skip is specified here.
     * </pre>
     *
     * <code>optional .validate.FieldRules items = 4;</code>
     */
    public fun clearItems() {
      _builder.clearItems()
    }
    /**
     * <pre>
     * Items specifies the contraints to be applied to each item in the field.
     * Repeated message fields will still execute validation against each item
     * unless skip is specified here.
     * </pre>
     *
     * <code>optional .validate.FieldRules items = 4;</code>
     * @return Whether the items field is set.
     */
    public fun hasItems(): kotlin.Boolean {
      return _builder.hasItems()
    }

    /**
     * <pre>
     * IgnoreEmpty specifies that the validation rules of this field should be
     * evaluated only if the field is not empty
     * </pre>
     *
     * <code>optional bool ignore_empty = 5;</code>
     */
    public var ignoreEmpty: kotlin.Boolean
      @JvmName("getIgnoreEmpty")
      get() = _builder.getIgnoreEmpty()
      @JvmName("setIgnoreEmpty")
      set(value) {
        _builder.setIgnoreEmpty(value)
      }
    /**
     * <pre>
     * IgnoreEmpty specifies that the validation rules of this field should be
     * evaluated only if the field is not empty
     * </pre>
     *
     * <code>optional bool ignore_empty = 5;</code>
     */
    public fun clearIgnoreEmpty() {
      _builder.clearIgnoreEmpty()
    }
    /**
     * <pre>
     * IgnoreEmpty specifies that the validation rules of this field should be
     * evaluated only if the field is not empty
     * </pre>
     *
     * <code>optional bool ignore_empty = 5;</code>
     * @return Whether the ignoreEmpty field is set.
     */
    public fun hasIgnoreEmpty(): kotlin.Boolean {
      return _builder.hasIgnoreEmpty()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun io.envoyproxy.pgv.validate.Validate.RepeatedRules.copy(block: io.envoyproxy.pgv.validate.RepeatedRulesKt.Dsl.() -> kotlin.Unit): io.envoyproxy.pgv.validate.Validate.RepeatedRules =
  io.envoyproxy.pgv.validate.RepeatedRulesKt.Dsl._create(this.toBuilder()).apply { block() }._build()
