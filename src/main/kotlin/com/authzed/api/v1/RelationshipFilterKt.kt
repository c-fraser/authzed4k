//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: authzed/api/v1/permission_service.proto

package com.authzed.api.v1;

@kotlin.jvm.JvmSynthetic
public inline fun relationshipFilter(block: com.authzed.api.v1.RelationshipFilterKt.Dsl.() -> kotlin.Unit): com.authzed.api.v1.PermissionService.RelationshipFilter =
  com.authzed.api.v1.RelationshipFilterKt.Dsl._create(com.authzed.api.v1.PermissionService.RelationshipFilter.newBuilder()).apply { block() }._build()
public object RelationshipFilterKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.authzed.api.v1.PermissionService.RelationshipFilter.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.authzed.api.v1.PermissionService.RelationshipFilter.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.authzed.api.v1.PermissionService.RelationshipFilter = _builder.build()

    /**
     * <code>string resource_type = 1 [(.validate.rules) = { ... }</code>
     */
    public var resourceType: kotlin.String
      @JvmName("getResourceType")
      get() = _builder.getResourceType()
      @JvmName("setResourceType")
      set(value) {
        _builder.setResourceType(value)
      }
    /**
     * <code>string resource_type = 1 [(.validate.rules) = { ... }</code>
     */
    public fun clearResourceType() {
      _builder.clearResourceType()
    }

    /**
     * <code>string optional_resource_id = 2 [(.validate.rules) = { ... }</code>
     */
    public var optionalResourceId: kotlin.String
      @JvmName("getOptionalResourceId")
      get() = _builder.getOptionalResourceId()
      @JvmName("setOptionalResourceId")
      set(value) {
        _builder.setOptionalResourceId(value)
      }
    /**
     * <code>string optional_resource_id = 2 [(.validate.rules) = { ... }</code>
     */
    public fun clearOptionalResourceId() {
      _builder.clearOptionalResourceId()
    }

    /**
     * <code>string optional_relation = 3 [(.validate.rules) = { ... }</code>
     */
    public var optionalRelation: kotlin.String
      @JvmName("getOptionalRelation")
      get() = _builder.getOptionalRelation()
      @JvmName("setOptionalRelation")
      set(value) {
        _builder.setOptionalRelation(value)
      }
    /**
     * <code>string optional_relation = 3 [(.validate.rules) = { ... }</code>
     */
    public fun clearOptionalRelation() {
      _builder.clearOptionalRelation()
    }

    /**
     * <code>.authzed.api.v1.SubjectFilter optional_subject_filter = 4;</code>
     */
    public var optionalSubjectFilter: com.authzed.api.v1.PermissionService.SubjectFilter
      @JvmName("getOptionalSubjectFilter")
      get() = _builder.getOptionalSubjectFilter()
      @JvmName("setOptionalSubjectFilter")
      set(value) {
        _builder.setOptionalSubjectFilter(value)
      }
    /**
     * <code>.authzed.api.v1.SubjectFilter optional_subject_filter = 4;</code>
     */
    public fun clearOptionalSubjectFilter() {
      _builder.clearOptionalSubjectFilter()
    }
    /**
     * <code>.authzed.api.v1.SubjectFilter optional_subject_filter = 4;</code>
     * @return Whether the optionalSubjectFilter field is set.
     */
    public fun hasOptionalSubjectFilter(): kotlin.Boolean {
      return _builder.hasOptionalSubjectFilter()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.authzed.api.v1.PermissionService.RelationshipFilter.copy(block: com.authzed.api.v1.RelationshipFilterKt.Dsl.() -> kotlin.Unit): com.authzed.api.v1.PermissionService.RelationshipFilter =
  com.authzed.api.v1.RelationshipFilterKt.Dsl._create(this.toBuilder()).apply { block() }._build()
