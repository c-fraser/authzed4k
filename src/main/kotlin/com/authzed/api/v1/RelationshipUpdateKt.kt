//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: authzed/api/v1/core.proto

package com.authzed.api.v1;

@kotlin.jvm.JvmSynthetic
public inline fun relationshipUpdate(block: com.authzed.api.v1.RelationshipUpdateKt.Dsl.() -> kotlin.Unit): com.authzed.api.v1.Core.RelationshipUpdate =
  com.authzed.api.v1.RelationshipUpdateKt.Dsl._create(com.authzed.api.v1.Core.RelationshipUpdate.newBuilder()).apply { block() }._build()
public object RelationshipUpdateKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.authzed.api.v1.Core.RelationshipUpdate.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.authzed.api.v1.Core.RelationshipUpdate.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.authzed.api.v1.Core.RelationshipUpdate = _builder.build()

    /**
     * <code>.authzed.api.v1.RelationshipUpdate.Operation operation = 1 [(.validate.rules) = { ... }</code>
     */
    public var operation: com.authzed.api.v1.Core.RelationshipUpdate.Operation
      @JvmName("getOperation")
      get() = _builder.getOperation()
      @JvmName("setOperation")
      set(value) {
        _builder.setOperation(value)
      }
    /**
     * <code>.authzed.api.v1.RelationshipUpdate.Operation operation = 1 [(.validate.rules) = { ... }</code>
     */
    public fun clearOperation() {
      _builder.clearOperation()
    }

    /**
     * <code>.authzed.api.v1.Relationship relationship = 2 [(.validate.rules) = { ... }</code>
     */
    public var relationship: com.authzed.api.v1.Core.Relationship
      @JvmName("getRelationship")
      get() = _builder.getRelationship()
      @JvmName("setRelationship")
      set(value) {
        _builder.setRelationship(value)
      }
    /**
     * <code>.authzed.api.v1.Relationship relationship = 2 [(.validate.rules) = { ... }</code>
     */
    public fun clearRelationship() {
      _builder.clearRelationship()
    }
    /**
     * <code>.authzed.api.v1.Relationship relationship = 2 [(.validate.rules) = { ... }</code>
     * @return Whether the relationship field is set.
     */
    public fun hasRelationship(): kotlin.Boolean {
      return _builder.hasRelationship()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.authzed.api.v1.Core.RelationshipUpdate.copy(block: com.authzed.api.v1.RelationshipUpdateKt.Dsl.() -> kotlin.Unit): com.authzed.api.v1.Core.RelationshipUpdate =
  com.authzed.api.v1.RelationshipUpdateKt.Dsl._create(this.toBuilder()).apply { block() }._build()
