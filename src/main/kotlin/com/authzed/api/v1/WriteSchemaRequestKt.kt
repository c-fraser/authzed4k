//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: authzed/api/v1/schema_service.proto

package com.authzed.api.v1;

@kotlin.jvm.JvmSynthetic
public inline fun writeSchemaRequest(block: com.authzed.api.v1.WriteSchemaRequestKt.Dsl.() -> kotlin.Unit): com.authzed.api.v1.SchemaServiceOuterClass.WriteSchemaRequest =
  com.authzed.api.v1.WriteSchemaRequestKt.Dsl._create(com.authzed.api.v1.SchemaServiceOuterClass.WriteSchemaRequest.newBuilder()).apply { block() }._build()
public object WriteSchemaRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.authzed.api.v1.SchemaServiceOuterClass.WriteSchemaRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.authzed.api.v1.SchemaServiceOuterClass.WriteSchemaRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.authzed.api.v1.SchemaServiceOuterClass.WriteSchemaRequest = _builder.build()

    /**
     * <pre>
     * The Schema containing one or more Object Definitions that will be written
     * to the Permissions System.
     * </pre>
     *
     * <code>string schema = 1 [(.validate.rules) = { ... }</code>
     */
    public var schema: kotlin.String
      @JvmName("getSchema")
      get() = _builder.getSchema()
      @JvmName("setSchema")
      set(value) {
        _builder.setSchema(value)
      }
    /**
     * <pre>
     * The Schema containing one or more Object Definitions that will be written
     * to the Permissions System.
     * </pre>
     *
     * <code>string schema = 1 [(.validate.rules) = { ... }</code>
     */
    public fun clearSchema() {
      _builder.clearSchema()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.authzed.api.v1.SchemaServiceOuterClass.WriteSchemaRequest.copy(block: com.authzed.api.v1.WriteSchemaRequestKt.Dsl.() -> kotlin.Unit): com.authzed.api.v1.SchemaServiceOuterClass.WriteSchemaRequest =
  com.authzed.api.v1.WriteSchemaRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()
